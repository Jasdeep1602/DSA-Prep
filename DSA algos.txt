These algos help to identify and solve problems.

✅ Sliding Window(stretch) and Two Pointer(squeeze)
✅ Greedy (Mostly Sorting)
✅ Kadane Algo (Mostly Subarray problem)
✅ Binary Search on Answer
✅ All Combinations/Permutations/Ways
✅ K Smallest / K Largest → Heaps
✅ Prefix/Suffix/Word Search → Tries
✅ Graph - DFS / BFS
✅ Topological Sort
✅ Bitwise XOR
✅ Tree - DFS/BFS
✅ Slow and Fast Pointers - LinkedList
✅ Parenthesis Problems - Stack
✅ DP - Knapsack Problem


Recognition of the Patterns:

✅ Two Pointers

Problems involving sorted arrays or linked lists
Finding pairs that satisfy certain conditions
When you need to compare elements from opposite ends
Keywords: "find two numbers that sum to X," "remove duplicates"

✅ Sliding Window

Problems involving contiguous sequences
Finding subarrays that meet certain criteria
Keywords: "maximum/minimum subarray," "longest substring with," "find all anagrams"
When the problem involves a fixed-size window or variable-size window with constraints

✅ Binary Search

Sorted arrays
Search problems with O(log n) time complexity requirement
"Find the first/last occurrence of"
"Find the element closest to"

✅ Breadth-First Search (BFS)

Graph or tree traversal
Finding shortest path
Level-by-level processing
"Minimum steps to reach"
Social network connections

✅ Depth-First Search (DFS)

Graph or tree exploration
Path finding problems
Backtracking scenarios
"All possible combinations/permutations"
Maze solving

✅ Dynamic Programming

Optimization problems (maximize/minimize)
Problems with overlapping subproblems
When you need to find all ways to do something
Keywords: "maximum profit," "minimum cost," "number of ways," "can you partition"

✅ Backtracking

Problems asking for all possible solutions
Constraint satisfaction problems
Combinatorial problems
Keywords: "all possible," "generate all," "combinations," "permutations"

✅ Heap/Priority Queue

Finding kth largest/smallest element
Stream processing
Merging k sorted arrays/lists
Keywords: "top k," "merge k," "minimum cost to connect"

✅ Hash Table

Frequency counting
Finding duplicates
Two-sum-like problems
Keywords: "find all duplicates," "contains duplicate"

✅ Stack

Parentheses validation problems
Expression evaluation
Algorithms requiring LIFO (Last-In-First-Out)
Problems involving "nearest greater/smaller element"
Histogram area problems

✅ Graph Algorithms

Problems involving connections, networks, dependencies
Path finding
Cycle detection
Topological sorting
Keywords: "course schedule," "network," "dependencies"

✅ Trie Data Structure

Problems involving prefixes in strings
Word dictionary implementation
Auto-complete features
Keywords: "prefix," "word search," "dictionary"

✅ Union Find (Disjoint Set)

Network connectivity problems
Finding connected components
Cycle detection in undirected graphs
Keywords: "redundant connection," "number of islands II"

✅ Bit Manipulation

Problems involving binary operations
Optimizing space complexity
Keywords: "single number," "number of bits," "power of two"
